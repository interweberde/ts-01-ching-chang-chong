Step: build-step-credential-initializer:

{"level":"warn","ts":1548177196.7710006,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/test\" is not a valid GitHub commit ID"}
{"level":"info","ts":1548177196.7722907,"logger":"fallback-logger","caller":"creds-init/main.go:40","msg":"Credentials initialized."}
Step: build-step-git-source-0:

{"level":"warn","ts":1548177197.7388456,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/test\" is not a valid GitHub commit ID"}
{"level":"info","ts":1548177199.1683252,"logger":"fallback-logger","caller":"git-init/main.go:92","msg":"Successfully cloned \"https://github.com/interweberde/ching-chang-chong.git\" @ \"5cf1aa00bfd57c84d0fc4ef3e872275e35a8392e\" in path \"/workspace\""}
Step: build-step-jenkins:

Picked up _JAVA_OPTIONS: -Xmx400m
Started
Running in Durability level: PERFORMANCE_OPTIMIZED
  18.544 [id=44]	WARNING	i.f.k.c.i.VersionUsageUtils#alert: The client is using resource type 'customresourcedefinitions' with unstable version 'v1beta1'
[Pipeline] node
Running on Jenkins in /tmp/jenkinsTests.tmp/jenkins3667048165608940837test/workspace/job
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
[Pipeline] }
[Pipeline] // stage
[Pipeline] withCredentials
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (CI Build and push snapshot)
Stage "CI Build and push snapshot" skipped due to when conditional
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build Release)
[Pipeline] git
 > git rev-parse --is-inside-work-tree # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/interweberde/ching-chang-chong.git # timeout=10
Fetching upstream changes from https://github.com/interweberde/ching-chang-chong.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/interweberde/ching-chang-chong.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
 > git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
Checking out Revision 5cf1aa00bfd57c84d0fc4ef3e872275e35a8392e (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 5cf1aa00bfd57c84d0fc4ef3e872275e35a8392e
 > git branch -a -v --no-abbrev # timeout=10
 > git branch -D master # timeout=10
 > git checkout -b master 5cf1aa00bfd57c84d0fc4ef3e872275e35a8392e
Commit message: "try to debug"
First time build. Skipping changelog.
[Pipeline] sh
+ jx-release-version
+ echo 0.0.3
[Pipeline] sh
+ cat VERSION
+ jx step tag --version 0.0.3
Tag v0.0.3 created and pushed to remote origin
[Pipeline] sh
+ npm install
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.4 (node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.4: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

added 1962 packages in 69.944s
[Pipeline] sh
+ CI=true DISPLAY=:99 npm test

> 01-ching-chang-chong@0.1.0 test /tmp/jenkinsTests.tmp/jenkins3667048165608940837test/workspace/job
> react-scripts test

PASS src/App.test.js
  ✓ renders without crashing (67ms)

Test Suites: 1 passed, 1 total
Tests:       1 passed, 1 total
Snapshots:   0 total
Time:        3.072s
Ran all test suites.
[Pipeline] sh
+ cat VERSION
+ export VERSION=0.0.3
+ skaffold build -f skaffold.yaml
Starting build...
Building [changeme]...
Sending build context to Docker daemon  525.9kBSending build context to Docker daemon   3.18MBSending build context to Docker daemon  4.754MBSending build context to Docker daemon  5.803MBSending build context to Docker daemon  9.015MBSending build context to Docker daemon  13.24MBSending build context to Docker daemon  16.98MBSending build context to Docker daemon  19.61MBSending build context to Docker daemon  26.01MBSending build context to Docker daemon  27.58MBSending build context to Docker daemon  30.78MBSending build context to Docker daemon  34.01MBSending build context to Docker daemon  35.58MBSending build context to Docker daemon  41.43MBSending build context to Docker daemon  44.61MBSending build context to Docker daemon  48.34MBSending build context to Docker daemon  51.53MBSending build context to Docker daemon   56.3MBSending build context to Docker daemon  59.49MBSending build context to Docker daemon  61.07MBSending build context to Docker daemon  65.86MBSending build context to Docker daemon  68.51MBSending build context to Docker daemon  71.15MBSending build context to Docker daemon  74.35MBSending build context to Docker daemon  79.11MBSending build context to Docker daemon  82.79MBSending build context to Docker daemon  84.38MBSending build context to Docker daemon   87.6MBSending build context to Docker daemon   92.4MBSending build context to Docker daemon  97.74MBSending build context to Docker daemon  105.2MBSending build context to Docker daemon  112.7MBSending build context to Docker daemon  119.1MBSending build context to Docker daemon  125.5MBSending build context to Docker daemon  133.6MBSending build context to Docker daemon  141.1MBSending build context to Docker daemon  147.5MBSending build context to Docker daemon    155MBSending build context to Docker daemon  161.9MBSending build context to Docker daemon  169.5MBSending build context to Docker daemon  175.4MBSending build context to Docker daemon  182.8MBSending build context to Docker daemon  189.3MBSending build context to Docker daemon    197MBSending build context to Docker daemon  202.4MBSending build context to Docker daemon  204.5MBSending build context to Docker daemon  205.6MBSending build context to Docker daemon  209.3MBSending build context to Docker daemon  214.7MBSending build context to Docker daemon  217.9MBSending build context to Docker daemon    220MBSending build context to Docker daemon  221.6MBSending build context to Docker daemon  224.8MBSending build context to Docker daemon  225.8MBSending build context to Docker daemon  227.9MBSending build context to Docker daemon  231.7MBSending build context to Docker daemon    236MBSending build context to Docker daemon  242.9MBSending build context to Docker daemon  246.6MBSending build context to Docker daemon  250.3MBSending build context to Docker daemon  254.1MBSending build context to Docker daemon  256.9MB
Step 1/7 : FROM node:11-slim as build-stage
 ---> 073c38aaf482
Step 2/7 : WORKDIR /usr/src/app
 ---> Using cache
 ---> 37444f4633d6
Step 3/7 : COPY . .
 ---> bdb31d079eb2
Step 4/7 : RUN npm run build
 ---> Running in a0cf4ffb68ce

> 01-ching-chang-chong@0.1.0 build /usr/src/app
> react-scripts build

Creating an optimized production build...
Compiled successfully.

File sizes after gzip:

  49.19 KB  build/static/js/1.0553fe95.chunk.js
  21.85 KB  build/static/css/1.0cc0af95.chunk.css
  1.93 KB   build/static/js/main.a016a5a0.chunk.js
  763 B     build/static/js/runtime~main.229c360f.js
  139 B     build/static/css/main.58271d92.chunk.css

The project was built assuming it is hosted at the server root.
You can control this with the homepage field in your package.json.
For example, add this to build it for GitHub Pages:

  "homepage" : "http://myname.github.io/myapp",

The build folder is ready to be deployed.
You may serve it with a static server:

  npm install -g serve
  serve -s build

Find out more about deployment here:

  http://bit.ly/CRA-deploy

 ---> c7b35dcfa1dc
Step 5/7 : FROM nginx:alpine
 ---> 315798907716
Step 6/7 : EXPOSE 80
 ---> Using cache
 ---> 88d503af4c25
Step 7/7 : COPY --from=build-stage /usr/src/app/build/ /usr/share/nginx/html
 ---> Using cache
 ---> 8e200dff5385
Successfully built 8e200dff5385
Successfully tagged ade39833f1bc2c36bcc6a44d771ec6e1:latest
The push refers to repository [10.152.183.126:5000/interweberde/ching-chang-chong]
718a79caf6e3: Preparing
a14c6c26f6ba: Preparing
974e2a9f749c: Preparing
9108db4b6ca3: Preparing
7bff100f35cb: Preparing
9108db4b6ca3: Layer already exists
974e2a9f749c: Layer already exists
a14c6c26f6ba: Layer already exists
7bff100f35cb: Layer already exists
718a79caf6e3: Layer already exists
0.0.3: digest: sha256:2934b57401c3e025757e07af1dea5d31386e2f44d73339b6e036b11b7d2b356b size: 1363
Build complete in 1m24.749371815s
Starting test...
Test complete in 8.164µs
changeme -> 10.152.183.126:5000/interweberde/ching-chang-chong:0.0.3
[Pipeline] sh
+ cat VERSION
+ jx step post build --image 10.152.183.126:5000/interweberde/ching-chang-chong:0.0.3
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Promote to Environments)
[Pipeline] dir
Running in /tmp/jenkinsTests.tmp/jenkins3667048165608940837test/workspace/job/charts/ching-chang-chong
[Pipeline] {
[Pipeline] sh
+ cat ../../VERSION
+ jx step changelog --version v0.0.3
Using batch mode as inside a pipeline
Generating change log from git ref 5cf1aa00bfd57c84d0fc4ef3e872275e35a8392e => d51d9611f75cb8a7beddc50967cdae16ec2fa7b3
Associating user jenkins-x.googlegroups.com in users.jenkins.io with email jenkins-x@googlegroups.com to git GitProvider user with login  as emails match
Adding label jenkins.io/git-github-userid= to user jenkins-x.googlegroups.com in users.jenkins.io
Associating user jenkins-x.googlegroups.com in users.jenkins.io with email jenkins-x@googlegroups.com to git GitProvider user with login  as emails match
Adding label jenkins.io/git-github-userid= to user jenkins-x.googlegroups.com in users.jenkins.io
Finding issues in commit messages using git format
No release found for interweberde/ching-chang-chong and tag v0.0.3 so creating a new release
Updated the release information at https://github.com/interweberde/ching-chang-chong/releases/tag/v0.0.3
generated: /tmp/jenkinsTests.tmp/jenkins3667048165608940837test/workspace/job/charts/ching-chang-chong/templates/release.yaml
Created Release ching-chang-chong-0-0-3 resource in namespace jx
Updating PipelineActivity interweberde-ching-chang-chong-master-3 with version 0.0.3
Updated PipelineActivities interweberde-ching-chang-chong-master-3 with release notes URL: https://github.com/interweberde/ching-chang-chong/releases/tag/v0.0.3
[Pipeline] sh
+ jx step helm release
No $CHART_REPOSITORY defined so using the default value of: http://jenkins-x-chartmuseum:8080
Adding missing Helm repo: jenkins-x http://chartmuseum.jenkins-x.io
Successfully added Helm repository jenkins-x.
Adding missing Helm repo: releases http://jenkins-x-chartmuseum:8080
Successfully added Helm repository releases.
No $CHART_REPOSITORY defined so using the default value of: http://jenkins-x-chartmuseum:8080
Uploading chart file ching-chang-chong-0.0.3.tgz to http://jenkins-x-chartmuseum:8080/api/charts
Received 201 response: {"saved":true}
[Pipeline] sh
+ ls -al
total 32
drwxr-xr-x 3 root root 4096 Jan 22 17:17 .
drwxr-xr-x 5 root root 4096 Jan 22 17:16 ..
-rwxr-xr-x 1 root root  333 Jan 22 17:14 .helmignore
-rw-r--r-- 1 root root  190 Jan 22 17:14 Chart.yaml
-rwxr-xr-x 1 root root 1411 Jan 22 17:14 Makefile
-rwxr-xr-x 1 root root   24 Jan 22 17:14 README.md
drwxr-xr-x 2 root root 4096 Jan 22 17:17 templates
-rwxr-xr-x 1 root root  785 Jan 22 17:14 values.yaml
[Pipeline] sh
+ cat ../../VERSION
+ jx promote -b --all-auto --timeout 1h --version 0.0.3
prow based install so skip waiting for the merge of Pull Requests to go green as currently there is an issue with gettingstatuses from the PR, see https://github.com/jenkins-x/jx/issues/2410
Promoting app ching-chang-chong version 0.0.3 to namespace jx-staging
error: open .gitignore: no such file or directory
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
ERROR: script returned exit code 1
Finished: FAILURE
